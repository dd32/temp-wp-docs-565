https://developer.wordpress.org/plugins/plugin-basics/uninstall-methods/

<!-- wp:paragraph -->
<p>Your plugin may need to do some clean-up when it is uninstalled from a site.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A plugin is considered uninstalled if a user has deactivated the plugin, and then clicks the delete link within the WordPress Admin.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When your plugin is uninstalled, you'll want to clear out any plugin options and/or settings specific to to the plugin, and/or other database entities such as tables.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Less experienced developers sometimes make the mistake of using the deactivation hook for this purpose.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This table illustrates the differences between deactivation and uninstall.</p>
<!-- /wp:paragraph -->

<!-- wp:table -->
<figure class="wp-block-table"><table><tbody><tr><th>Scenario</th><th>Deactivation Hook</th><th>Uninstall Hook</th></tr><tr><th>Flush Cache/Temp</th><td>Yes</td><td>No</td></tr><tr><th>Flush Permalinks</th><td>Yes</td><td>No</td></tr><tr><th>Remove Options from {$wpdb-&gt;prefix}_options</th><td>No</td><td>Yes</td></tr><tr><th>Remove Tables from wpdb</th><td>No</td><td>Yes</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:heading -->
<h2>Method 1: <code>register_uninstall_hook</code></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To set up an uninstall hook, use the register_uninstall_hook() function:</p>
<!-- /wp:paragraph -->

<!-- wp:code {"language":"php"} -->
<pre class="wp-block-code"><code lang="php" class="language-php">register_uninstall_hook(__FILE__, 'pluginprefix_function_to_run');</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>Method 2: <code>uninstall.php</code></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To use this method you need to create an <code>uninstall.php</code> file inside the root folder of your plugin. This magic file is run automatically when the users deletes the plugin.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example: <code>/plugin-name/uninstall.php</code></p>
<!-- /wp:paragraph -->

<!-- wp:shortcode -->
[alert]
Always check for the constant <code>WP_UNINSTALL_PLUGIN</code> in <code>uninstall.php</code> before doing anything. This protects against direct access.

The constant will be defined by WordPress during the <code>uninstall.php</code> invocation.

The constant is <strong>NOT</strong> defined when uninstall is performed by register_uninstall_hook().
[/alert]
<!-- /wp:shortcode -->

<!-- wp:paragraph -->
<p>Here is an example deleting option entries and dropping a database table:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// if uninstall.php is not called by WordPress, die
if (!defined('WP_UNINSTALL_PLUGIN')) {
    die;
}

$option_name = 'wporg_option';

delete_option($option_name);

// for site options in Multisite
delete_site_option($option_name);

// drop a custom database table
global $wpdb;
$wpdb-&gt;query("DROP TABLE IF EXISTS {$wpdb-&gt;prefix}mytable");</code></pre>
<!-- /wp:code -->

<!-- wp:shortcode -->
[info]
In Multisite, looping through all blogs to delete options can be very resource intensive.
[/info]
<!-- /wp:shortcode -->